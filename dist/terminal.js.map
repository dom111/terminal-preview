{
  "version": 3,
  "sources": ["../src/parse.ts", "../src/cursorPositioning.ts", "../src/terminal.ts"],
  "sourcesContent": ["export type Style = {\n  bg: string;\n  fg: string;\n\n  bold: boolean;\n  dim: boolean;\n  italic: boolean;\n  underline: boolean;\n  blink: boolean;\n  overline: boolean;\n  invert: boolean;\n  hidden: boolean;\n  strikethrough: boolean;\n};\n\nlet currentStyle: Style = {\n  bg: '49',\n  fg: '39',\n  bold: false, // \\e[1m\n  dim: false, // \\e[2m\n  italic: false, // \\e[3m\n  underline: false, // \\e[4m\n  blink: false, // \\e[5m\n  overline: false, // \\e[6m\n  invert: false, // \\e[7m\n  hidden: false, // \\e[8m\n  strikethrough: false, // \\e[9m\n};\n\nexport const defaultStyle: Style = {\n  ...currentStyle,\n};\n\nexport const parseStyles = (values: string): Style => {\n  let newStyle: Style = {\n    ...currentStyle,\n  };\n\n  values = values\n    .replace(/\\b48;5;(\\d+)\\b/, '48_5_$1')\n    .replace(/\\b38;5;(\\d+)\\b/, '38_5_$1')\n    .replace(/\\b48;2;(\\d+);(\\d+);(\\d+)\\b/, '48_2_$1_$2_$3')\n    .replace(/\\b38;2;(\\d+);(\\d+);(\\d+)\\b/, '38_2_$1_$2_$3');\n\n  values.split(/;/).forEach((value) => {\n    let match;\n\n    if (value === '0' || value === '') {\n      newStyle = {\n        ...defaultStyle,\n      };\n    }\n\n    if (value === '1') {\n      newStyle.bold = true;\n    }\n\n    if (value === '2') {\n      newStyle.dim = true;\n    }\n\n    if (value === '3') {\n      newStyle.italic = true;\n    }\n\n    if (value === '4') {\n      newStyle.underline = true;\n    }\n\n    if (value === '5') {\n      newStyle.blink = true;\n    }\n\n    if (value === '6') {\n      newStyle.overline = true;\n    }\n\n    if (value === '7') {\n      newStyle.invert = true;\n    }\n\n    if (value === '8') {\n      newStyle.hidden = true;\n    }\n\n    if (value === '9') {\n      newStyle.strikethrough = true;\n    }\n\n    if (value === '21') {\n      newStyle.bold = false;\n    }\n\n    if (value === '22') {\n      newStyle.dim = false;\n    }\n\n    if (value === '23') {\n      newStyle.italic = false;\n    }\n\n    if (value === '24') {\n      newStyle.underline = false;\n    }\n\n    if (value === '25') {\n      newStyle.blink = false;\n    }\n\n    if (value === '26') {\n      newStyle.overline = false;\n    }\n\n    if (value === '27') {\n      newStyle.invert = false;\n    }\n\n    if (value === '28') {\n      newStyle.hidden = false;\n    }\n\n    if (value === '29') {\n      newStyle.strikethrough = false;\n    }\n\n    if ((match = value.match(/^38_2_(\\d+)_(\\d+)_(\\d+)$/))) {\n      newStyle.fg = simplifyColour('true-' + match.slice(1).join('-'));\n    } else if ((match = value.match(/^38_5_(\\d+)$/))) {\n      newStyle.fg = simplifyColour('256-' + match[1]);\n    } else if ((match = value.match(/^(3|9)[0-79]$/))) {\n      newStyle.fg = value;\n    }\n\n    if ((match = value.match(/^^48_2_(\\d+)_(\\d+)_(\\d+)$/))) {\n      newStyle.bg = simplifyColour('true-' + match.slice(1).join('-'), true);\n    } else if ((match = value.match(/^48_5_(\\d+)$/))) {\n      newStyle.bg = simplifyColour('256-' + match[1], true);\n    } else if ((match = value.match(/^(4|10)[0-79]$/))) {\n      newStyle.bg = value;\n    }\n  });\n\n  return newStyle;\n};\n\nexport const simplifyColour = (colour: string, bg: boolean = false): string => {\n  const prefix = bg ? '4' : '3',\n    brightPrefix = bg ? '10' : '9';\n\n  let match;\n\n  if ((match = colour.match(/^true-(\\d+)-(\\d+)-(\\d+)/))) {\n    if (\n      (match = rgbToTerm256(\n        [\n          parseInt(match[1], 10),\n          parseInt(match[2], 10),\n          parseInt(match[3], 10),\n        ],\n        true\n      ))\n    ) {\n      colour = '256-' + match;\n    }\n  }\n\n  if ((match = colour.match(/^256-(\\d+)/))) {\n    if (parseInt(match[1], 10) < 16) {\n      if (parseInt(match[1], 10) < 8) {\n        colour = prefix + match[1];\n      } else {\n        colour = brightPrefix + (parseInt(match[1], 10) % 8);\n      }\n    } else if (match[1] === '16') {\n      colour = prefix + '0';\n    } else if (match[1] === '231') {\n      colour = brightPrefix + '7';\n    }\n  }\n\n  return colour;\n};\n\nexport const buildStyles = (style: Style) => {\n  let styleString = '\\\\e[';\n\n  (\n    [\n      { key: 'bg', n: 48 },\n      { key: 'fg', n: 38 },\n    ] as { key: 'fg' | 'bg'; n: number }[]\n  ).forEach((obj) => {\n    let match;\n\n    if ((match = style[obj.key].match(/true-(\\d+)-(\\d+)-(\\d+)/))) {\n      styleString += obj.n + ';2;' + match.slice(1).join(';') + ';';\n    } else if ((match = style[obj.key].match(/256-(\\d+)/))) {\n      styleString += obj.n + ';5;' + match[1] + ';';\n    } else if (style[obj.key]) {\n      styleString += style[obj.key] + ';';\n    }\n  });\n\n  (\n    [\n      'bold',\n      'dim',\n      'italic',\n      'underline',\n      'blink',\n      'overline',\n      'invert',\n      'hidden',\n      'strikethrough',\n    ] as (keyof Style)[]\n  ).forEach((property, i) => {\n    if (style[property]) {\n      styleString += ++i + ';';\n    }\n  });\n\n  styleString = styleString.replace(/;$/, '');\n\n  return styleString + 'm';\n};\n\nexport type StyleType = {\n  content: string;\n  style?: Style;\n  type: string;\n  value: string;\n  wrap: boolean;\n};\n\nexport const extract = (string: string): StyleType[] => {\n  const patterns = {\n      stylingReset: /^(?:\\\\\\[)?(?:\\\\033|\\\\e|\\\\x1[bB]|\\x1b)\\[(0|)m(?:\\\\])?/,\n      styling: /^(?:\\\\\\[)?(?:\\\\033|\\\\e|\\\\x1[bB]|\\x1b)\\[([^m]*)m(?:\\\\])?/,\n      command: /^(?:\\\\\\[)?(?:\\\\?`([^`]+)\\\\?`|\\\\?\\$\\(([^)]+)\\))(?:\\\\])?/,\n      octal: /^\\\\(\\d{3})/,\n      hex: /^\\\\x([0-9a-fA-F]{2})/,\n      token: /^( |\\\\[!#$@\\\\0aAdehHjlnsTtuvVWw])/,\n      variable: /^\\${?(\\w+|\\?)}?/,\n      text: /^([\\S\\s])/,\n    },\n    data: StyleType[] = [];\n\n  let match, last, matched: boolean;\n\n  while (string) {\n    matched = false;\n\n    Object.entries(patterns).forEach(([type, pattern]) => {\n      if (!matched && (match = string.match(pattern))) {\n        matched = true;\n\n        if (\n          type === 'text' &&\n          data.length &&\n          (last = data[data.length - 1]).type === 'text'\n        ) {\n          last.content += match[0];\n          last.value += match[0];\n        } else if (type === 'command') {\n          data.push({\n            type: type,\n            content: match[0],\n            value: match[1] || match[2] || '',\n            wrap: !!(match[0].match(/^\\\\\\[/) && match[0].match(/\\\\]$/)),\n          });\n        } else {\n          data.push({\n            type: type,\n            content: match[0],\n            value: match[1],\n            wrap: !!(match[0].match(/^\\\\\\[/) && match[0].match(/\\\\]$/)),\n          });\n        }\n\n        string = string.replace(pattern, '');\n      }\n    });\n  }\n\n  return data;\n};\n\nexport const process = (data: StyleType[]): string => {\n  let code = '',\n    getStyle = (): string => {\n      const classes = [];\n\n      if (currentStyle.invert) {\n        classes.push('bg-' + currentStyle.fg);\n        classes.push('fg-' + currentStyle.bg);\n      } else {\n        classes.push('bg-' + currentStyle.bg);\n        classes.push('fg-' + currentStyle.fg);\n      }\n\n      (\n        [\n          'bold',\n          'dim',\n          'italic',\n          'underline',\n          'overline',\n          'strikethrough',\n          'blink',\n          'hidden',\n        ] as (keyof Style)[]\n      ).forEach((key) => {\n        if (currentStyle[key]) {\n          classes.push(key);\n        }\n      });\n\n      return ' ' + classes.join(' ');\n    };\n\n  currentStyle = {\n    ...defaultStyle,\n  };\n\n  data.forEach((block) => {\n    const escape = (s: string): string => (s || '').replace(/\"/g, '&quot;');\n\n    if (block.type.match(/styling/)) {\n      if (code.match(/<span class=\"block styling/)) {\n        code += '</span>';\n      }\n\n      block.style = parseStyles(block.value);\n\n      currentStyle = {\n        ...currentStyle,\n        ...block.style,\n      };\n\n      code +=\n        '<span class=\"block styling' +\n        getStyle() +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(block.value) +\n        '\" data-type=\"' +\n        block.type +\n        '\" style=\"' +\n        ((block.style.fg + '').match(/true-/)\n          ? (block.style.fg + '')\n              .replace(/true-/, 'color: rgb(')\n              .replace(/$/, ');')\n              .replace(/\\-/g, ',')\n          : '') +\n        ((block.style.bg + '').match(/true-/)\n          ? (block.style.bg + '')\n              .replace(/\\-/g, ',')\n              .replace(/true,/, 'background-color: rgb(')\n              .replace(/$/, ')')\n          : '') +\n        '\"><span class=\"content\">' +\n        block.content +\n        '</span>';\n    } else if (block.type === 'command') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(block.value) +\n        '\"><span class=\"content\">' +\n        (block.wrap ? '<span class=\"wrap\">\\\\[</span>' : '') +\n        '$(' +\n        block.value +\n        ')' +\n        (block.wrap ? '<span class=\"wrap\">\\\\]</span>' : '') +\n        '</span></span>';\n    } else if (block.type === 'token') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(block.value) +\n        '\" data-type=\"' +\n        block.type +\n        '\"><span class=\"content\">' +\n        block.content +\n        '</span></span>';\n    } else if (block.type === 'text') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(block.value) +\n        '\" data-type=\"' +\n        block.type +\n        '\">' +\n        block.content +\n        '</span>';\n    } else if (block.type === 'variable') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(block.value) +\n        '\" data-type=\"' +\n        block.type +\n        '\"><span class=\"content\">' +\n        block.content +\n        '</span></span>';\n    } else if (block.type === 'hex') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(String.fromCharCode(parseInt(block.value, 16))) +\n        '\" data-type=\"' +\n        block.type +\n        '\"><span class=\"content\">' +\n        block.content +\n        '</span></span>';\n    } else if (block.type === 'octal') {\n      code +=\n        '<span class=\"block ' +\n        block.type +\n        '\" data-content=\"' +\n        escape(block.content) +\n        '\" data-value=\"' +\n        escape(String.fromCharCode(parseInt(block.value, 8))) +\n        '\" data-type=\"' +\n        block.type +\n        '\"><span class=\"content\">' +\n        block.content +\n        '</span></span>';\n    }\n  });\n\n  code += '<span class=\"cursor\"></span>';\n\n  if (code.match(/<span class=\"block styling/)) {\n    code += '</span>';\n  }\n\n  return code;\n};\n\nexport const parse = (string: string): string => {\n  return process(extract(string));\n};\n\nexport type Colour = [number, number, number];\n\nexport type TermColour = [...Colour, number];\n\n// store out here to build once and re-use\nexport const colours = (() => {\n  const colours: TermColour[] = [];\n\n  colours.push([0, 0, 0, 0]);\n  colours.push([128, 0, 0, 1]);\n  colours.push([0, 128, 0, 2]);\n  colours.push([128, 128, 0, 3]);\n  colours.push([0, 0, 128, 4]);\n  colours.push([128, 0, 128, 5]);\n  colours.push([0, 128, 128, 6]);\n  colours.push([192, 192, 192, 7]);\n  colours.push([128, 128, 128, 8]);\n  colours.push([255, 0, 0, 9]);\n  colours.push([0, 255, 0, 10]);\n  colours.push([255, 255, 0, 11]);\n  colours.push([0, 0, 255, 12]);\n  colours.push([255, 0, 255, 13]);\n  colours.push([0, 255, 255, 14]);\n  colours.push([255, 255, 255, 15]);\n\n  [0, 95, 135, 175, 215, 255].forEach((r) => {\n    [0, 95, 135, 175, 215, 255].forEach((g) => {\n      [0, 95, 135, 175, 215, 255].forEach((b) => {\n        colours.push([\n          r,\n          g,\n          b,\n          16 +\n            parseInt(\n              '' +\n                Math.floor((r / 255) * 5) +\n                Math.floor((g / 255) * 5) +\n                Math.floor((b / 255) * 5),\n              6\n            ),\n        ]);\n      });\n    });\n  });\n\n  [\n    8, 18, 28, 38, 48, 58, 68, 78, 88, 98, 108, 118, 128, 138, 148, 158, 168,\n    178, 188, 198, 208, 218, 228, 238,\n  ].forEach((s) => {\n    colours.push([s, s, s, 232 + Math.floor(s / 10)]);\n  });\n\n  return colours;\n})();\n\nexport const getClosest = (candidates: TermColour[], source: Colour) =>\n  candidates.slice(0).sort(\n    (x, y) =>\n      Math.abs(x[0] - source[0]) +\n        Math.abs(x[1] - source[1]) +\n        Math.abs(x[2] - source[2]) -\n        (Math.abs(y[0] - source[0]) +\n          Math.abs(y[1] - source[1]) +\n          Math.abs(y[2] - source[2])) || x[3] - y[3] // prefer lower colour numbers\n  )[0];\n\nexport const rgbToTerm16 = (rgb: Colour, bg: boolean = false) =>\n  simplifyColour('256-' + (getClosest(colours.slice(0, 16), rgb) || [])[3], bg);\n\nexport const rgbToTerm256 = (\n  rgb: Colour,\n  exact: boolean = false\n): number | null => {\n  if (exact) {\n    const colour =\n      colours.filter((colour) => {\n        return (\n          colour[0] === rgb[0] && colour[1] === rgb[1] && colour[2] === rgb[2]\n        );\n      })[0] || [];\n\n    return colour[3] ?? null;\n  }\n\n  return (getClosest(colours, rgb) || [])[3] ?? null;\n};\n\nexport const term16ToRgb = (id: number): Colour => {\n  let colour;\n\n  // TODO: defaults based on selected option?\n  if (id === 49) {\n    colour = colours[0];\n  } else if (id === 39) {\n    colour = colours[7];\n  }\n  // normal\n  else if (id < 50) {\n    colour = colours[id % 10];\n  }\n  // bright\n  else {\n    colour = colours[(id % 10) + 8];\n  }\n\n  return [colour[0], colour[1], colour[2]];\n};\n\nexport const term256ToRgb = (id: number): Colour | null => {\n  let value = null;\n\n  if (colours[id][3] === id) {\n    return [colours[id][0], colours[id][1], colours[id][2]];\n  }\n\n  colours.forEach((colour): void => {\n    if (colour[3] === id) {\n      value = [colour[0], colour[1], colour[2]];\n    }\n  });\n\n  return value;\n};\n\nexport const hexToRgb = (hex: string): Colour => {\n  hex = hex.replace(/^#/, '');\n\n  if (hex.length === 3) {\n    return [\n      parseInt(hex[0] + hex[0], 16),\n      parseInt(hex[1] + hex[1], 16),\n      parseInt(hex[2] + hex[2], 16),\n    ];\n  } else if (hex.length === 6) {\n    return [\n      parseInt(hex[0] + hex[1], 16),\n      parseInt(hex[2] + hex[3], 16),\n      parseInt(hex[4] + hex[5], 16),\n    ];\n  }\n\n  return [0, 0, 0];\n};\n\nexport const rgbToHex = (rgb: Colour): string =>\n  `#${rgb.map((n) => (0 + n.toString(16)).substr(-2)).join('')}`;\n\nexport default parse;\n", "export const getCursorPosition = (parent: HTMLElement) => {\n  const selection = window.getSelection(),\n    getAncestors = (el: HTMLElement) => {\n      const ancestors = [];\n\n      while (el.parentNode !== document) {\n        ancestors.push(el.parentNode);\n\n        el = el.parentNode as HTMLElement;\n      }\n\n      return ancestors;\n    };\n\n  if (selection === null) {\n    return 0;\n  }\n\n  let position = -1,\n    node;\n\n  if (selection.focusNode) {\n    if (\n      getAncestors(selection.focusNode as HTMLElement).some(\n        (node) => node === parent\n      )\n    ) {\n      node = selection.focusNode;\n      position = selection.focusOffset;\n\n      while (node) {\n        if (node === parent) {\n          break;\n        }\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          position += (node.textContent ?? '').length;\n        } else {\n          node = node.parentNode;\n\n          if (!node) {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  return position;\n};\n\nexport const setCursorPosition = (el: HTMLElement, chars: number) => {\n  const createRange = (\n    node: Node,\n    chars: { count: number },\n    range: Range | null = null\n  ): Range => {\n    if (range === null) {\n      range = document.createRange();\n      range.selectNode(node);\n      range.setStart(node, 0);\n    }\n\n    if (chars.count === 0) {\n      range.setEnd(node, chars.count);\n    } else if (node && chars.count > 0) {\n      if (node.nodeType === Node.TEXT_NODE) {\n        if ((node.textContent ?? '').length < chars.count) {\n          chars.count -= (node.textContent ?? '').length;\n        } else {\n          range.setEnd(node, chars.count);\n          chars.count = 0;\n        }\n      } else {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          range = createRange(node.childNodes[i], chars, range);\n\n          if (chars.count === 0) {\n            break;\n          }\n        }\n      }\n    }\n\n    return range;\n  };\n\n  if (chars >= 0) {\n    const selection = window.getSelection(),\n      range = createRange(el, { count: chars });\n\n    if (selection === null) {\n      return;\n    }\n\n    if (range) {\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      return true;\n    }\n\n    return false;\n  }\n};\n", "import parse from './parse';\nimport { getCursorPosition, setCursorPosition } from './cursorPositioning';\n\nexport const bind = (el: HTMLElement) => {\n  const update = () => {\n    el.classList.add('mutating');\n\n    const newContent = parse(el.innerText);\n\n    if (el.innerHTML !== newContent) {\n      const position = getCursorPosition(el);\n\n      el.innerHTML = newContent;\n\n      setCursorPosition(el, position);\n    }\n\n    requestAnimationFrame(() => el.classList.remove('mutating'));\n  };\n\n  if (el.classList.contains('mutating')) {\n    return;\n  }\n\n  if (!el.classList.contains('change-event-bound')) {\n    el.addEventListener('input', () => update());\n\n    el.classList.add('change-event-bound');\n  }\n\n  update();\n};\n\nexport const observer = new MutationObserver((mutationsList): void => {\n  for (const { target } of mutationsList) {\n    if (!(target instanceof HTMLElement)) {\n      continue;\n    }\n\n    const childTerminals = target.querySelectorAll('.terminal');\n\n    if (childTerminals.length) {\n      childTerminals.forEach((el) => bind(el as HTMLElement));\n\n      continue;\n    }\n\n    if (target.matches('.terminal')) {\n      bind(target);\n    }\n  }\n});\n\nobserver.observe(document, {\n  childList: true,\n  subtree: true,\n});\n\ndocument.querySelectorAll('.terminal').forEach((el) => bind(el as HTMLElement));\n\nexport default bind;\n"],
  "mappings": "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",
  "names": []
}
